(is.na(GlobalStatus) &
(PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable")) ~ TRUE,
.default = FALSE),
IsNewRemission = case_when((is.na(GlobalStatus) | GlobalStatus %in% c("CR", "CRr", "PartRemission")) &
(PrimarySiteStatus == "N" & LymphnodalStatus == "N" & MetastasisStatus == "N") &
(PrimarySiteChange == "Regression" | LymphnodalChange == "Regression" | MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableRemission = case_when((is.na(GlobalStatus) | GlobalStatus %in% c("CR", "CRr", "PartRemission")) &
(PrimarySiteStatus == "N" & LymphnodalStatus == "N" & MetastasisStatus == "N") &
(PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable") ~ TRUE,
.default = FALSE))
View(ADS$DiseaseCourses)
ADS$DiseaseCourses <- ADS$Events %>%
filter(EventSubclass == "DiseaseStatus") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
bind_rows(InitialDiseaseStatus) %>%
mutate(PrimarySiteStatus_Comp = case_when(EventSubclass == "Staging" ~ PrimarySiteStatus_Initial,
.default = AssignComparatorCodes(PrimarySiteStatus, "PrimarySiteStatus")),
LymphnodalStatus_Comp = case_when(EventSubclass == "Staging" ~ LymphnodalStatus_Initial,
.default = AssignComparatorCodes(LymphnodalStatus, "LymphnodalStatus")),
MetastasisStatus_Comp = case_when(EventSubclass == "Staging" ~ MetastasisStatus_Initial,
.default = AssignComparatorCodes(MetastasisStatus, "MetastasisStatus"))) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%
mutate(PrimarySiteStatus_Diff = PrimarySiteStatus_Comp - lag(PrimarySiteStatus_Comp),
LymphnodalStatus_Diff = LymphnodalStatus_Comp - lag(LymphnodalStatus_Comp),
MetastasisStatus_Diff = MetastasisStatus_Comp - lag(MetastasisStatus_Comp)) %>%
ungroup() %>%
mutate(PrimarySiteChange = case_when(PrimarySiteStatus_Diff == 0 ~ "Stable",
PrimarySiteStatus_Diff < 0 ~ "Regression",
PrimarySiteStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
LymphnodalChange = case_when(LymphnodalStatus_Diff == 0 ~ "Stable",
LymphnodalStatus_Diff < 0 ~ "Regression",
LymphnodalStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
MetastasisChange = case_when(MetastasisStatus_Diff == 0 ~ "Stable",
MetastasisStatus_Diff < 0 ~ "Regression",
MetastasisStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
IsProgression = case_when(GlobalStatus %in% c("D", "P") ~ TRUE,
PrimarySiteStatus %in% c("rpT", "R") | LymphnodalStatus %in% c("pL", "L") | MetastasisStatus %in% c("pM", "M") ~ TRUE,
PrimarySiteChange == "Progression" | LymphnodalChange == "Progression" | MetastasisChange == "Progression" ~ TRUE,
.default = FALSE),
IsContradiction = GlobalStatus %in% c("CR", "CRr") & IsProgression == TRUE,
IsResponse = case_when(GlobalStatus %in% c("CR", "CRr", "PartRemission", "MinResp") ~ TRUE,
IsProgression == TRUE ~ FALSE,
IsContradiction == TRUE ~ NA,
is.na(GlobalStatus) & (PrimarySiteChange == "Regression" |
LymphnodalChange == "Regression" |
MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableDisease = case_when(GlobalStatus == "NC" ~ TRUE,
(is.na(GlobalStatus) &
(PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable")) ~ TRUE,
.default = FALSE),
IsNewRemission = case_when((is.na(GlobalStatus) | GlobalStatus %in% c("CR", "CRr", "PartRemission")) &
(PrimarySiteStatus == "N" & LymphnodalStatus == "N" & MetastasisStatus == "N") &
(PrimarySiteChange == "Regression" | LymphnodalChange == "Regression" | MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableRemission = case_when((is.na(GlobalStatus) | GlobalStatus %in% c("CR", "CRr", "PartRemission")) &
(PrimarySiteStatus == "N" & LymphnodalStatus == "N" & MetastasisStatus == "N") &
(PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable") ~ TRUE,
.default = FALSE))
View(ADS$DiseaseCourses)
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE)
View(Test)
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE)      # Sort again by EventDate and SubclassOrder
View(Test)
ADS$DiseaseCourses <- ADS$Events %>%
filter(EventSubclass == "DiseaseStatus") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
bind_rows(InitialDiseaseStatus) %>%
mutate(PrimarySiteStatus_Comp = case_when(EventSubclass == "Staging" ~ PrimarySiteStatus_Initial,
.default = AssignComparatorCodes(PrimarySiteStatus, "PrimarySiteStatus")),
LymphnodalStatus_Comp = case_when(EventSubclass == "Staging" ~ LymphnodalStatus_Initial,
.default = AssignComparatorCodes(LymphnodalStatus, "LymphnodalStatus")),
MetastasisStatus_Comp = case_when(EventSubclass == "Staging" ~ MetastasisStatus_Initial,
.default = AssignComparatorCodes(MetastasisStatus, "MetastasisStatus"))) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%
mutate(PrimarySiteStatus_Diff = PrimarySiteStatus_Comp - lag(PrimarySiteStatus_Comp),
LymphnodalStatus_Diff = LymphnodalStatus_Comp - lag(LymphnodalStatus_Comp),
MetastasisStatus_Diff = MetastasisStatus_Comp - lag(MetastasisStatus_Comp)) %>%
ungroup() %>%
mutate(PrimarySiteChange = case_when(PrimarySiteStatus_Diff == 0 ~ "Stable",
PrimarySiteStatus_Diff < 0 ~ "Regression",
PrimarySiteStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
LymphnodalChange = case_when(LymphnodalStatus_Diff == 0 ~ "Stable",
LymphnodalStatus_Diff < 0 ~ "Regression",
LymphnodalStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
MetastasisChange = case_when(MetastasisStatus_Diff == 0 ~ "Stable",
MetastasisStatus_Diff < 0 ~ "Regression",
MetastasisStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
IsProgression = case_when(GlobalStatus %in% c("D", "P") ~ TRUE,
PrimarySiteStatus %in% c("rpT", "R") | LymphnodalStatus %in% c("pL", "L") | MetastasisStatus %in% c("pM", "M") ~ TRUE,
PrimarySiteChange == "Progression" | LymphnodalChange == "Progression" | MetastasisChange == "Progression" ~ TRUE,
.default = FALSE),
IsContradiction = GlobalStatus %in% c("CR", "CRr") & IsProgression == TRUE,
IsResponse = case_when(GlobalStatus %in% c("CR", "CRr", "PartRemission", "MinResp") ~ TRUE,
IsProgression == TRUE ~ FALSE,
IsContradiction == TRUE ~ NA,
is.na(GlobalStatus) & (PrimarySiteChange == "Regression" |
LymphnodalChange == "Regression" |
MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableDisease = case_when(GlobalStatus == "NC" ~ TRUE,
(is.na(GlobalStatus) &
(PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable")) ~ TRUE,
.default = FALSE),
IsNewRemission = case_when((is.na(GlobalStatus) | GlobalStatus %in% c("CR", "CRr", "PartRemission")) &
(PrimarySiteStatus == "N" & LymphnodalStatus == "N" & MetastasisStatus == "N") &
(PrimarySiteChange == "Regression" | LymphnodalChange == "Regression" | MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableRemission = case_when((is.na(GlobalStatus) | GlobalStatus %in% c("CR", "CRr", "PartRemission")) &
(PrimarySiteStatus == "N" & LymphnodalStatus == "N" & MetastasisStatus == "N") &
(PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable") ~ TRUE,
.default = FALSE)) %>%
filter(EventSubclass == "DiseaseStatus")
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE)      # Sort again by EventDate and SubclassOrder
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(TherapyInternalID = EventClassRank)
?fill
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(TherapyInternalID = EventClassRank) %>%
bind_rows(ADS$DiseaseCourses) %>%
fill(TherapyInternalID, .direction = "down")
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(TherapyInternalID = EventClassRank) %>%
bind_rows(ADS$DiseaseCourses) %>%
fill(TherapyInternalID, .direction = "down")
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(TherapyInternalID = EventClassRank) %>%
bind_rows(ADS$DiseaseCourses) %>%
fill(TherapyInternalID, .direction = "down") %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE)      # Sort again by EventDate and SubclassOrder
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down")
ADS$DiseaseCourses <- ADS$Events %>%
filter(EventSubclass == "DiseaseStatus") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
bind_rows(InitialDiseaseStatus) %>%
mutate(PrimarySiteStatus_Comp = case_when(EventSubclass == "Staging" ~ PrimarySiteStatus_Initial,
.default = AssignComparatorCodes(PrimarySiteStatus, "PrimarySiteStatus")),
LymphnodalStatus_Comp = case_when(EventSubclass == "Staging" ~ LymphnodalStatus_Initial,
.default = AssignComparatorCodes(LymphnodalStatus, "LymphnodalStatus")),
MetastasisStatus_Comp = case_when(EventSubclass == "Staging" ~ MetastasisStatus_Initial,
.default = AssignComparatorCodes(MetastasisStatus, "MetastasisStatus"))) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%
mutate(PrimarySiteStatus_Diff = PrimarySiteStatus_Comp - lag(PrimarySiteStatus_Comp),
LymphnodalStatus_Diff = LymphnodalStatus_Comp - lag(LymphnodalStatus_Comp),
MetastasisStatus_Diff = MetastasisStatus_Comp - lag(MetastasisStatus_Comp)) %>%
ungroup() %>%
mutate(PrimarySiteChange = case_when(PrimarySiteStatus_Diff == 0 ~ "Stable",
PrimarySiteStatus_Diff < 0 ~ "Regression",
PrimarySiteStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
LymphnodalChange = case_when(LymphnodalStatus_Diff == 0 ~ "Stable",
LymphnodalStatus_Diff < 0 ~ "Regression",
LymphnodalStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
MetastasisChange = case_when(MetastasisStatus_Diff == 0 ~ "Stable",
MetastasisStatus_Diff < 0 ~ "Regression",
MetastasisStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
IsProgression = case_when(GlobalStatus %in% c("D", "P") ~ TRUE,
PrimarySiteStatus %in% c("rpT", "R") | LymphnodalStatus %in% c("pL", "L") | MetastasisStatus %in% c("pM", "M") ~ TRUE,
PrimarySiteChange == "Progression" | LymphnodalChange == "Progression" | MetastasisChange == "Progression" ~ TRUE,
.default = FALSE),
IsContradiction = GlobalStatus %in% c("CR", "CRr") & IsProgression == TRUE,
IsResponse = case_when(GlobalStatus %in% c("CR", "CRr", "PartRemission", "MinResp") ~ TRUE,
IsProgression == TRUE ~ FALSE,
IsContradiction == TRUE ~ NA,
is.na(GlobalStatus) & (PrimarySiteChange == "Regression" |
LymphnodalChange == "Regression" |
MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableDisease = case_when(GlobalStatus == "NC" ~ TRUE,
(is.na(GlobalStatus) &
(PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable")) ~ TRUE,
.default = FALSE),
IsInRemission = case_when((is.na(GlobalStatus) | GlobalStatus %in% c("CR", "CRr", "PartRemission")) &
(PrimarySiteStatus == "N" & LymphnodalStatus == "N" & MetastasisStatus == "N")),
IsNewRemission = case_when(IsInRemission == TRUE & (PrimarySiteChange == "Regression" | LymphnodalChange == "Regression" | MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableRemission = case_when(IsInRemission == TRUE & (PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable") ~ TRUE,
.default = FALSE)) %>%
filter(EventSubclass == "DiseaseStatus")
ADS$DiseaseCourses <- ADS$Events %>%
filter(EventSubclass == "DiseaseStatus") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
bind_rows(InitialDiseaseStatus) %>%
mutate(PrimarySiteStatus_Comp = case_when(EventSubclass == "Staging" ~ PrimarySiteStatus_Initial,
.default = AssignComparatorCodes(PrimarySiteStatus, "PrimarySiteStatus")),
LymphnodalStatus_Comp = case_when(EventSubclass == "Staging" ~ LymphnodalStatus_Initial,
.default = AssignComparatorCodes(LymphnodalStatus, "LymphnodalStatus")),
MetastasisStatus_Comp = case_when(EventSubclass == "Staging" ~ MetastasisStatus_Initial,
.default = AssignComparatorCodes(MetastasisStatus, "MetastasisStatus"))) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%
mutate(PrimarySiteStatus_Diff = PrimarySiteStatus_Comp - lag(PrimarySiteStatus_Comp),
LymphnodalStatus_Diff = LymphnodalStatus_Comp - lag(LymphnodalStatus_Comp),
MetastasisStatus_Diff = MetastasisStatus_Comp - lag(MetastasisStatus_Comp)) %>%
ungroup() %>%
mutate(PrimarySiteChange = case_when(PrimarySiteStatus_Diff == 0 ~ "Stable",
PrimarySiteStatus_Diff < 0 ~ "Regression",
PrimarySiteStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
LymphnodalChange = case_when(LymphnodalStatus_Diff == 0 ~ "Stable",
LymphnodalStatus_Diff < 0 ~ "Regression",
LymphnodalStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
MetastasisChange = case_when(MetastasisStatus_Diff == 0 ~ "Stable",
MetastasisStatus_Diff < 0 ~ "Regression",
MetastasisStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
IsProgression = case_when(GlobalStatus %in% c("D", "P") ~ TRUE,
PrimarySiteStatus %in% c("rpT", "R") | LymphnodalStatus %in% c("pL", "L") | MetastasisStatus %in% c("pM", "M") ~ TRUE,
PrimarySiteChange == "Progression" | LymphnodalChange == "Progression" | MetastasisChange == "Progression" ~ TRUE,
.default = FALSE),
IsContradiction = GlobalStatus %in% c("CR", "CRr") & IsProgression == TRUE,
IsResponse = case_when(GlobalStatus %in% c("CR", "CRr", "PartRemission", "MinResp") ~ TRUE,
IsProgression == TRUE ~ FALSE,
IsContradiction == TRUE ~ NA,
is.na(GlobalStatus) & (PrimarySiteChange == "Regression" |
LymphnodalChange == "Regression" |
MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableDisease = case_when(GlobalStatus == "NC" ~ TRUE,
(is.na(GlobalStatus) &
(PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable")) ~ TRUE,
.default = FALSE),
IsInRemission = case_when(GlobalStatus %in% c("CR", "CRr", "PartRemission") ~ TRUE,
is.na(GlobalStatus) & (PrimarySiteStatus == "N" & LymphnodalStatus == "N" & MetastasisStatus == "N") ~ TRUE,
.default = FALSE),
IsNewRemission = case_when(IsInRemission == TRUE & (PrimarySiteChange == "Regression" | LymphnodalChange == "Regression" | MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableRemission = case_when(IsInRemission == TRUE & (PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable") ~ TRUE,
.default = FALSE)) %>%
filter(EventSubclass == "DiseaseStatus")
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down") %>%
mutate(TimeSinceTherapy = round(as.numeric(difftime(EventDate, AssociatedTherapyDate, units = "days")), digits = 1)) %>%
group_by(PatientID, DiagnosisID, AssociatedTherapyID) %>%
mutate(TimeToResponse = which(IsResponse == TRUE)[1])
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down") %>%
mutate(TimeSinceTherapy = round(as.numeric(difftime(EventDate, AssociatedTherapyDate, units = "days")), digits = 1)) %>%
group_by(PatientID, DiagnosisID, AssociatedTherapyID) %>%
mutate(TimeToResponse = TimeSinceTherapy[which(IsResponse == TRUE)[1]])
Test <- c(TRUE, FALSE, FALSE)
any(Test)
any(Test == TRUE)
Test <- c(FALSE, FALSE, FALSE)
any(Test)
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down") %>%
mutate(TimeSinceTherapy = round(as.numeric(difftime(EventDate, AssociatedTherapyDate, units = "days")), digits = 1)) %>%
group_by(PatientID, DiagnosisID, AssociatedTherapyID) %>%
mutate(HasResponse = any(IsResponse),
TimeToResponse = TimeSinceTherapy[which(IsResponse == TRUE)[1]],
TimeToRemission = TimeSinceTherapy[which(IsInRemission == TRUE)[1]])
?any
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down") %>%
mutate(TimeSinceTherapy = round(as.numeric(difftime(EventDate, AssociatedTherapyDate, units = "days")), digits = 1)) %>%
group_by(PatientID, DiagnosisID, AssociatedTherapyID) %>%
mutate(HasResponse = any(IsResponse, na.rm = TRUE),
TimeToResponse = TimeSinceTherapy[which(IsResponse == TRUE)[1]],
TimeToRemission = TimeSinceTherapy[which(IsInRemission == TRUE)[1]])
ColNamesTherapy <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
colnames()
ColNamesTherapy <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
colnames()
ColNamesTherapy <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
colnames()
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down") %>%
mutate(TimeSinceTherapy = round(as.numeric(difftime(EventDate, AssociatedTherapyDate, units = "days")), digits = 1)) %>%
group_by(PatientID, DiagnosisID, AssociatedTherapyID) %>%
mutate(HasResponse = any(IsResponse, na.rm = TRUE),
TimeToResponse = TimeSinceTherapy[which(IsResponse == TRUE)[1]],
TimeToRemission = TimeSinceTherapy[which(IsInRemission == TRUE)[1]],
TimeToRelapse = TimeSinceTherapy[which(IsProgression == TRUE)[1]]) %>%
ungroup() %>%
select(all_of(ColNamesTherapy),
HasResponse,
TimeToResponse,
TimeToRemission,
TimeToRelapse)
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down") %>%
mutate(TimeSinceTherapy = round(as.numeric(difftime(EventDate, AssociatedTherapyDate, units = "days")), digits = 1)) %>%
group_by(PatientID, DiagnosisID, AssociatedTherapyID) %>%
mutate(HasResponse = any(IsResponse, na.rm = TRUE),
TimeToResponse = TimeSinceTherapy[which(IsResponse == TRUE)[1]],
TimeToRemission = TimeSinceTherapy[which(IsInRemission == TRUE)[1]],
TimeToRelapse = TimeSinceTherapy[which(IsProgression == TRUE)[1]]) %>%
ungroup() %>%
select(all_of(ColNamesTherapy))
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down") %>%
mutate(TimeSinceTherapy = round(as.numeric(difftime(EventDate, AssociatedTherapyDate, units = "days")), digits = 1)) %>%
group_by(PatientID, DiagnosisID, AssociatedTherapyID) %>%
mutate(HasResponse = any(IsResponse, na.rm = TRUE),
TimeToResponse = TimeSinceTherapy[which(IsResponse == TRUE)[1]],
TimeToRemission = TimeSinceTherapy[which(IsInRemission == TRUE)[1]],
TimeToRelapse = TimeSinceTherapy[which(IsProgression == TRUE)[1]]) %>%
ungroup() %>%
select(all_of(c(ColNamesTherapy,
"HasResponse",
"TimeToResponse",
"TimeToRemission",
"TimeToRelapse")))
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down") %>%
mutate(TimeSinceTherapy = round(as.numeric(difftime(EventDate, AssociatedTherapyDate, units = "days")), digits = 1)) %>%
group_by(PatientID, DiagnosisID, AssociatedTherapyID) %>%
mutate(HasResponse = any(IsResponse, na.rm = TRUE),
TimeToResponse = TimeSinceTherapy[which(IsResponse == TRUE)[1]],
TimeToRemission = TimeSinceTherapy[which(IsInRemission == TRUE)[1]],
TimeToRelapse = TimeSinceTherapy[which(IsProgression == TRUE)[1]]) %>%
ungroup() %>%
select(all_of(ColNamesTherapy),
HasResponse,
TimeToResponse,
TimeToRemission,
TimeToRelapse)
View(Test)
Test <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down") %>%
mutate(TimeSinceTherapy = round(as.numeric(difftime(EventDate, AssociatedTherapyDate, units = "days")), digits = 1)) %>%
group_by(PatientID, DiagnosisID, AssociatedTherapyID) %>%
mutate(HasResponse = any(IsResponse, na.rm = TRUE),
TimeToResponse = TimeSinceTherapy[which(IsResponse == TRUE)[1]],
TimeToRemission = TimeSinceTherapy[which(IsInRemission == TRUE)[1]],
TimeToRelapse = TimeSinceTherapy[which(IsProgression == TRUE)[1]]) %>%
ungroup() %>%
filter(EventClass == "Therapy") %>%
select(all_of(ColNamesTherapy),
HasResponse,
TimeToResponse,
TimeToRemission,
TimeToRelapse)
devtools::load_all(".")
CDS <- CurationOutput$CuratedDataSet
AugmentationOutput <- dsCCPhos::AugmentDataDS(CuratedDataSetName.S = "CDS")
SampleStatistics <- GetSampleStatisticsDS(TableName.S = "ADS$Patients",
FeatureName.S = "LastVitalStatus")
# For testing purposes
RawDataSetName.S <- "RawDataSet"
require(dplyr)
require(purrr)
require(stringr)
require(validate)
RawDataSet <- RawDataSet %>%
imap(function(dataframe, name)
{
# Create named vector to look up matching feature names in meta data ('OldName' = 'NewName')
name <- str_remove(name, "RDS_")   # Remove "RDS_" prefix from table names
vc_Lookup <- dplyr::filter(dsCCPhos::Meta_Features, TableName_Curated == name)$FeatureName_Raw
names(vc_Lookup) <- dplyr::filter(dsCCPhos::Meta_Features, TableName_Curated == name)$FeatureName_Curated
if (!is_empty(dataframe))
{
# Rename feature names according to look-up vector
dplyr::rename(dataframe, any_of(vc_Lookup))      # Returns a tibble
}
else { return(dataframe) }
})
ValidationRules <- names(RawDataSet) %>%
map(function(tablename)
{
# Get table feature names from meta data
tablename <- str_remove(tablename, "RDS_")   # Remove "RDS_" prefix from table names
# Raw feature names
vc_FeatureNames <- dplyr::filter(dsCCPhos::Meta_Features, TableName_Curated == tablename)$FeatureName_Raw
# Corresponding curated feature names (used for ensured compatibility with R naming rules)
names(vc_FeatureNames) <- dplyr::filter(dsCCPhos::Meta_Features, TableName_Curated == tablename)$FeatureName_Curated
# Validation rules: data type
Rules_DataType <- names(vc_FeatureNames) %>%
map(\(curatedfeaturename) data.frame(name = paste0("DataTypeCharacter...", tablename, "...", vc_FeatureNames[curatedfeaturename]),
description = "",
rule = paste0("is.character(", curatedfeaturename, ")"))) %>%
list_rbind()
# Validation rules: missing data
Rules_Missings <- names(vc_FeatureNames) %>%
map(\(curatedfeaturename) data.frame(name = paste0("NonMissingValues...", tablename, "...", vc_FeatureNames[curatedfeaturename]),
description = "",
rule = paste0("!is.na(", curatedfeaturename, ")"))) %>%
list_rbind()
# Return consolidated data frame of validation rules
return(rbind(Rules_DataType,
Rules_Missings))
}) %>% set_names(names(RawDataSet))
ValidationReports <- pmap(.l = list(RawDataSet,
ValidationRules),
.f = \(dataframe, ruleset) confront(dataframe,
validator(.data = ruleset)))
ADS <- AugmentationOutput$AugmentedDataSet
View(ADS$Patients)
CDS <- CurationOutput$CuratedDataSet
AugmentationOutput <- dsCCPhos::AugmentDataDS(CuratedDataSetName.S = "CDS")
