IsContradiction = GlobalStatus %in% c("CR", "CRr") & IsProgression == TRUE,
IsResponse = case_when(GlobalStatus %in% c("CR", "CRr", "PartRemission", "MinResp") ~ TRUE,
IsProgression == TRUE ~ FALSE,
IsContradiction == TRUE ~ NA,
is.na(GlobalStatus) & (PrimarySiteChange == "Regression" |
LymphnodalChange == "Regression" |
MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableDisease = case_when(GlobalStatus == "NC" ~ TRUE,
(is.na(GlobalStatus) &
(PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable")) ~ TRUE,
.default = FALSE),
IsInRemission = case_when(GlobalStatus %in% c("CR", "CRr", "PartRemission") ~ TRUE,
is.na(GlobalStatus) & (PrimarySiteStatus == "N" & LymphnodalStatus == "N" & MetastasisStatus == "N") ~ TRUE,
.default = FALSE),
IsNewRemission = case_when(IsInRemission == TRUE & (PrimarySiteChange == "Regression" | LymphnodalChange == "Regression" | MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableRemission = case_when(IsInRemission == TRUE & (PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable") ~ TRUE,
.default = FALSE)) %>%
filter(EventSubclass == "DiseaseStatus") %>%
select(all_of(ColumnNamesDiseaseStatus),
PrimarySiteChange,
LymphnodalChange,
MetastasisChange,
IsProgression,
IsContradiction,
IsResponse,
IsStableDisease,
IsInRemission,
IsNewRemission,
IsStableRemission)
ColumnNamesDiseaseStatus <- ADS$Events %>%
filter(EventClass == "DiseaseStatus")
View(ADS$Events)
ColumnNamesDiseaseStatus <- ADS$Events %>%
filter(EventSubclass == "DiseaseStatus")
ColumnNamesDiseaseStatus <- ADS$Events %>%
filter(EventSubclass == "DiseaseStatus") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
colnames()
ADS$DiseaseCourses <- ADS$Events %>%
filter(EventSubclass == "DiseaseStatus") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
bind_rows(InitialDiseaseStatus) %>%
mutate(PrimarySiteStatus_Comp = case_when(EventSubclass == "Staging" ~ PrimarySiteStatus_Initial,
.default = AssignComparatorCodes(PrimarySiteStatus, "PrimarySiteStatus")),
LymphnodalStatus_Comp = case_when(EventSubclass == "Staging" ~ LymphnodalStatus_Initial,
.default = AssignComparatorCodes(LymphnodalStatus, "LymphnodalStatus")),
MetastasisStatus_Comp = case_when(EventSubclass == "Staging" ~ MetastasisStatus_Initial,
.default = AssignComparatorCodes(MetastasisStatus, "MetastasisStatus"))) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%
mutate(PrimarySiteStatus_Diff = PrimarySiteStatus_Comp - lag(PrimarySiteStatus_Comp),
LymphnodalStatus_Diff = LymphnodalStatus_Comp - lag(LymphnodalStatus_Comp),
MetastasisStatus_Diff = MetastasisStatus_Comp - lag(MetastasisStatus_Comp)) %>%
ungroup() %>%
mutate(PrimarySiteChange = case_when(PrimarySiteStatus_Diff == 0 ~ "Stable",
PrimarySiteStatus_Diff < 0 ~ "Regression",
PrimarySiteStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
LymphnodalChange = case_when(LymphnodalStatus_Diff == 0 ~ "Stable",
LymphnodalStatus_Diff < 0 ~ "Regression",
LymphnodalStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
MetastasisChange = case_when(MetastasisStatus_Diff == 0 ~ "Stable",
MetastasisStatus_Diff < 0 ~ "Regression",
MetastasisStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
IsProgression = case_when(GlobalStatus %in% c("D", "P") ~ TRUE,
PrimarySiteStatus %in% c("rpT", "R") | LymphnodalStatus %in% c("pL", "L") | MetastasisStatus %in% c("pM", "M") ~ TRUE,
PrimarySiteChange == "Progression" | LymphnodalChange == "Progression" | MetastasisChange == "Progression" ~ TRUE,
.default = FALSE),
IsContradiction = GlobalStatus %in% c("CR", "CRr") & IsProgression == TRUE,
IsResponse = case_when(GlobalStatus %in% c("CR", "CRr", "PartRemission", "MinResp") ~ TRUE,
IsProgression == TRUE ~ FALSE,
IsContradiction == TRUE ~ NA,
is.na(GlobalStatus) & (PrimarySiteChange == "Regression" |
LymphnodalChange == "Regression" |
MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableDisease = case_when(GlobalStatus == "NC" ~ TRUE,
(is.na(GlobalStatus) &
(PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable")) ~ TRUE,
.default = FALSE),
IsInRemission = case_when(GlobalStatus %in% c("CR", "CRr", "PartRemission") ~ TRUE,
is.na(GlobalStatus) & (PrimarySiteStatus == "N" & LymphnodalStatus == "N" & MetastasisStatus == "N") ~ TRUE,
.default = FALSE),
IsNewRemission = case_when(IsInRemission == TRUE & (PrimarySiteChange == "Regression" | LymphnodalChange == "Regression" | MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableRemission = case_when(IsInRemission == TRUE & (PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable") ~ TRUE,
.default = FALSE)) %>%
filter(EventSubclass == "DiseaseStatus") %>%
select(all_of(ColumnNamesDiseaseStatus),
PrimarySiteChange,
LymphnodalChange,
MetastasisChange,
IsProgression,
IsContradiction,
IsResponse,
IsStableDisease,
IsInRemission,
IsNewRemission,
IsStableRemission)
ColumnNamesTherapy <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
colnames()
ADS$Therapies <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(IsTherapyOfInterest = if_all(all_of(names(TherapyOfInterest)), .x == TherapyOfInterest[[cur_column()]]),
AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down") %>%
mutate(TimeSinceTherapy = round(as.numeric(difftime(EventDate, AssociatedTherapyDate, units = "days")), digits = 1)) %>%
group_by(PatientID, DiagnosisID, AssociatedTherapyID) %>%
mutate(HasResponse = any(IsResponse, na.rm = TRUE),
TimeToResponse = TimeSinceTherapy[which(IsResponse == TRUE)[1]],
TimeToRemission = TimeSinceTherapy[which(IsInRemission == TRUE)[1]],
TimeToRelapse = TimeSinceTherapy[which(IsProgression == TRUE)[1]]) %>%
ungroup() %>%
filter(EventClass == "Therapy") %>%
select(all_of(ColumnNamesTherapy),
HasResponse,
TimeToResponse,
TimeToRemission,
TimeToRelapse)
ADS$Therapies <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(IsTherapyOfInterest = if_all(all_of(names(TherapyOfInterest)), ~ .x == TherapyOfInterest[[cur_column()]]),
AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down") %>%
mutate(TimeSinceTherapy = round(as.numeric(difftime(EventDate, AssociatedTherapyDate, units = "days")), digits = 1)) %>%
group_by(PatientID, DiagnosisID, AssociatedTherapyID) %>%
mutate(HasResponse = any(IsResponse, na.rm = TRUE),
TimeToResponse = TimeSinceTherapy[which(IsResponse == TRUE)[1]],
TimeToRemission = TimeSinceTherapy[which(IsInRemission == TRUE)[1]],
TimeToRelapse = TimeSinceTherapy[which(IsProgression == TRUE)[1]]) %>%
ungroup() %>%
filter(EventClass == "Therapy") %>%
select(all_of(ColumnNamesTherapy),
HasResponse,
TimeToResponse,
TimeToRemission,
TimeToRelapse)
ADS$Therapies <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(IsTherapyOfInterest = if_all(all_of(names(Settings$TherapyOfInterest)), ~ .x == Settings$TherapyOfInterest[[cur_column()]]),
AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down") %>%
mutate(TimeSinceTherapy = round(as.numeric(difftime(EventDate, AssociatedTherapyDate, units = "days")), digits = 1)) %>%
group_by(PatientID, DiagnosisID, AssociatedTherapyID) %>%
mutate(HasResponse = any(IsResponse, na.rm = TRUE),
TimeToResponse = TimeSinceTherapy[which(IsResponse == TRUE)[1]],
TimeToRemission = TimeSinceTherapy[which(IsInRemission == TRUE)[1]],
TimeToRelapse = TimeSinceTherapy[which(IsProgression == TRUE)[1]]) %>%
ungroup() %>%
filter(EventClass == "Therapy") %>%
select(all_of(ColumnNamesTherapy),
HasResponse,
TimeToResponse,
TimeToRemission,
TimeToRelapse)
View(ADS$Therapies)
ADS$Therapies <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(IsTherapyOfInterest = if_all(all_of(names(Settings$TherapyOfInterest)), ~ .x == Settings$TherapyOfInterest[[cur_column()]]),
AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down") %>%
mutate(TimeSinceTherapy = round(as.numeric(difftime(EventDate, AssociatedTherapyDate, units = "days")), digits = 1)) %>%
group_by(PatientID, DiagnosisID, AssociatedTherapyID) %>%
mutate(HasResponse = any(IsResponse, na.rm = TRUE),
TimeToResponse = TimeSinceTherapy[which(IsResponse == TRUE)[1]],
TimeToRemission = TimeSinceTherapy[which(IsInRemission == TRUE)[1]],
TimeToRelapse = TimeSinceTherapy[which(IsProgression == TRUE)[1]]) %>%
ungroup() %>%
filter(EventClass == "Therapy") %>%
select(all_of(ColumnNamesTherapy),
IsTherapyOfInterest,
HasResponse,
TimeToResponse,
TimeToRemission,
TimeToRelapse)
View(ADS$Therapies)
#--- Set up progress bar -------------------------------------------------------
CountProgressItems <- ADS$Events %>% select(PatientID, DiagnosisID) %>% n_distinct()
ProgressBar <- progress_bar$new(format = "Summarizing event data [:bar] :percent in :elapsed  :spin",
total = CountProgressItems, clear = FALSE, width= 100)
# Summarize diagnosis-specific event data using dsCCPhos::SummarizeEventData()
df_Aux_DiagnosisSummary_Events <- ADS$Events %>%
group_by(PatientID, DiagnosisID) %>%
group_modify(~ SummarizeEventData(EventData = .x,
ProgressBarObject = ProgressBar)) %>%
ungroup()
df_Aux_DiagnosisData <- CDS$Diagnosis %>%
left_join(CDS$Staging, by = join_by(PatientID, DiagnosisID), relationship = "many-to-many") %>%
group_by(DiagnosisID) %>%
arrange(DiagnosisDate) %>%
slice_head() %>%
ungroup() %>%
mutate(UICCStageCategory = case_match(UICCStage,
c("0", "0is", "0a") ~ "0",
c("I", "IA", "IA1", "IA2", "IA3", "IB", "IB1", "IB2", "IC", "IS") ~ "I",
c("II", "IIA", "IIA1", "IIA2", "IIB", "IIC") ~ "II",
c("III", "IIIA", "IIIB", "IIIC", "IIIC1", "IIIC2", "IIID") ~ "III",
c("IV", "IVA", "IVB", "IVC") ~ "IV",
.default = NA_character_),
.after = UICCStage)
View(df_Aux_DiagnosisData)
View(df_Aux_DiagnosisData)
ADS$Diagnoses <- df_Aux_DiagnosisData %>%
left_join(df_Aux_DiagnosisSummary_Events, by = join_by(PatientID, DiagnosisID)) %>%
#filter(is.na(TimeDiagnosisToDeath) | TimeDiagnosisToDeath >= 0) %>%
ungroup()
View(ADS$Diagnoses)
View(InitialDiseaseStatus)
### For testing purposes
Settings.S <- list(CutoffValues = list(DaysDiagnosisToInitialStaging = 30),
DiagnosisAssociation = list(Check = TRUE,
RuleSet = dsCCPhos::Meta_DiagnosisAssociation,
Profile = "Default"),
EventFeatures = list(RuleSet = dsCCPhos::Meta_EventFeatures,
Profile = "Default"),
TherapyOfInterest = list(EventSubclass = "Surgery",
EventSubclassRank = 1),
TimeToEvent = list(ReferenceEvent = c(EventClass = "Diagnosis",
EventSubclass = "InitialDiagnosis"),
TargetEvent = c(EventClass = "VitalStatus",
EventSubclass = "Deceased")))
# Rename 'Settings.S' argument for better code readability
Settings <- Settings.S
# If list of 'Settings' passed to function is incomplete, complete it with default values
if (is.null(Settings$DiagnosisAssociation$Check)) { Settings$DiagnosisAssociation$Check <- TRUE }
if (is.null(Settings$DiagnosisAssociation$RuleSet)) { Settings$DiagnosisAssociation$RuleSet <- dsCCPhos::Meta_DiagnosisAssociation }
if (is.null(Settings$DiagnosisAssociation$Profile)) { Settings$DiagnosisAssociation$Profile <- "Default" }
if (is.null(Settings$EventFeatures$RuleSet)) { Settings$EventFeatures$RuleSet <- dsCCPhos::Meta_EventFeatures }
if (is.null(Settings$EventFeatures$Profile)) { Settings$EventFeatures$Profile <- "Default" }
if (is.null(Settings$TimeToEvent)) { Settings$TimeToEvent <- list(ReferenceEvent = c(EventClass = "Diagnosis",
EventSubclass = "InitialDiagnosis"),
TargetEvent = c(EventClass = "VitalStatus",
EventSubclass = "Deceased")) }
InitialDiseaseStatus <- ADS$Events %>%
filter(EventClass == "Therapy" | (EventSubclass == "Staging" & EventSubclassRank == 1)) %>%
unnest(cols = c(EventDetails), keep_empty = TRUE)
View(InitialDiseaseStatus)
Settings$CutoffValues$DaysDiagnosisToInitialStaging
?fill
InitialDiseaseStatus <- ADS$Events %>%
filter(EventClass == "Therapy" | (EventSubclass == "Staging" & EventSubclassRank == 1)) %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(HadTherapy = (EventClass == "Therapy")) %>%
fill(HadTherapy, .direction = "down")
InitialDiseaseStatus <- ADS$Events %>%
filter(EventClass == "Therapy" | (EventSubclass == "Staging" & EventSubclassRank == 1)) %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(HadTherapy = case_when(EventClass == "Therapy" ~ TRUE,
.default = NA)) %>%
group_by(PatientID, DiagnosisID) %>%
fill(HadTherapy, .direction = "down")
?case_match
InitialDiseaseStatus <- ADS$Events %>%
filter(EventClass == "Therapy" | (EventSubclass == "Staging" & EventSubclassRank == 1)) %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(HadTherapy = case_when(EventClass == "Therapy" ~ TRUE,
.default = NA)) %>%
group_by(PatientID, DiagnosisID) %>%
fill(HadTherapy, .direction = "down") %>%
mutate(HadTherapy = case_match(HadTherapy, NA ~ FALSE))
InitialDiseaseStatus <- ADS$Events %>%
filter(EventClass == "Therapy" | (EventSubclass == "Staging" & EventSubclassRank == 1)) %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(HadTherapy = case_when(EventClass == "Therapy" ~ TRUE,
.default = NA)) %>%
group_by(PatientID, DiagnosisID) %>%
fill(HadTherapy, .direction = "down") %>%
mutate(HadTherapy = case_match(HadTherapy, TRUE ~ TRUE, NA ~ FALSE))
InitialDiseaseStatus <- ADS$Events %>%
filter(EventClass == "Therapy" | (EventSubclass == "Staging" & EventSubclassRank == 1)) %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(HadTherapy = case_when(EventClass == "Therapy" ~ TRUE,
.default = NA)) %>%
group_by(PatientID, DiagnosisID) %>%
fill(HadTherapy, .direction = "down") %>%
mutate(IsLikelyInitialStaging = (HadTherapy != TRUE & EventDaysSinceDiagnosis < Settings$CutoffValues$DaysDiagnosisToInitialStaging),
PrimarySiteStatus_Initial = case_when(TNM_T == 0 ~ 0,
.default = 1),
LymphnodalStatus_Initial = case_when(str_starts(TNM_N, "0") ~ 0,
.default = 1),
MetastasisStatus_Initial = case_when(str_starts(TNM_M, "0") ~ 0,
.default = 1))
View(InitialDiseaseStatus)
InitialDiseaseStatus <- ADS$Events %>%
filter(EventClass == "Therapy" | (EventSubclass == "Staging" & EventSubclassRank == 1)) %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(HadTherapy = case_when(EventClass == "Therapy" ~ TRUE,
.default = NA)) %>%
group_by(PatientID, DiagnosisID) %>%
fill(HadTherapy, .direction = "down") %>%
mutate(HadTherapy = replace_na(HadTherapy, FALSE),
IsLikelyInitialStaging = (HadTherapy == FALSE & EventDaysSinceDiagnosis < Settings$CutoffValues$DaysDiagnosisToInitialStaging),
PrimarySiteStatus_Initial = case_when(TNM_T == 0 ~ 0,
.default = 1),
LymphnodalStatus_Initial = case_when(str_starts(TNM_N, "0") ~ 0,
.default = 1),
MetastasisStatus_Initial = case_when(str_starts(TNM_M, "0") ~ 0,
.default = 1))
View(InitialDiseaseStatus)
ColumnNamesStaging <- ADS$Events %>%
filter(EventSubclass == "Staging") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
colnames()
InitialDiseaseStatus <- ADS$Events %>%
filter(EventClass == "Therapy" | (EventSubclass == "Staging" & EventSubclassRank == 1)) %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(HadTherapy = case_when(EventClass == "Therapy" ~ TRUE,
.default = NA)) %>%
group_by(PatientID, DiagnosisID) %>%
fill(HadTherapy, .direction = "down") %>%
mutate(HadTherapy = replace_na(HadTherapy, FALSE))
InitialDiseaseStatus <- ADS$Events %>%
filter(EventClass == "Therapy" | (EventSubclass == "Staging" & EventSubclassRank == 1)) %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(HadTherapy = case_when(EventClass == "Therapy" ~ TRUE,
.default = NA)) %>%
group_by(PatientID, DiagnosisID) %>%
fill(HadTherapy, .direction = "down") %>%
mutate(HadTherapy = replace_na(HadTherapy, FALSE)) %>%
ungroup() %>%
filter(EventSubclass == "Staging") %>%
mutate(IsLikelyInitialStaging = (HadTherapy == FALSE & EventDaysSinceDiagnosis < Settings$CutoffValues$DaysDiagnosisToInitialStaging),
PrimarySiteStatus_Initial = case_when(TNM_T == 0 ~ 0,
.default = 1),
LymphnodalStatus_Initial = case_when(str_starts(TNM_N, "0") ~ 0,
.default = 1),
MetastasisStatus_Initial = case_when(str_starts(TNM_M, "0") ~ 0,
.default = 1)) %>%
select(all_of(ColumnNamesStaging),
IsLikelyInitialStaging,
PrimarySiteStatus_Initial,
LymphnodalStatus_Initial,
MetastasisStatus_Initial)
View(InitialDiseaseStatus)
### For testing purposes
Settings.S <- list(CutoffValues = list(DaysDiagnosisToInitialStaging = 50),
DiagnosisAssociation = list(Check = TRUE,
RuleSet = dsCCPhos::Meta_DiagnosisAssociation,
Profile = "Default"),
EventFeatures = list(RuleSet = dsCCPhos::Meta_EventFeatures,
Profile = "Default"),
TherapyOfInterest = list(EventSubclass = "Surgery",
EventSubclassRank = 1),
TimeToEvent = list(ReferenceEvent = c(EventClass = "Diagnosis",
EventSubclass = "InitialDiagnosis"),
TargetEvent = c(EventClass = "VitalStatus",
EventSubclass = "Deceased")))
# Rename 'Settings.S' argument for better code readability
Settings <- Settings.S
# If list of 'Settings' passed to function is incomplete, complete it with default values
if (is.null(Settings$DiagnosisAssociation$Check)) { Settings$DiagnosisAssociation$Check <- TRUE }
if (is.null(Settings$DiagnosisAssociation$RuleSet)) { Settings$DiagnosisAssociation$RuleSet <- dsCCPhos::Meta_DiagnosisAssociation }
if (is.null(Settings$DiagnosisAssociation$Profile)) { Settings$DiagnosisAssociation$Profile <- "Default" }
if (is.null(Settings$EventFeatures$RuleSet)) { Settings$EventFeatures$RuleSet <- dsCCPhos::Meta_EventFeatures }
if (is.null(Settings$EventFeatures$Profile)) { Settings$EventFeatures$Profile <- "Default" }
if (is.null(Settings$TimeToEvent)) { Settings$TimeToEvent <- list(ReferenceEvent = c(EventClass = "Diagnosis",
EventSubclass = "InitialDiagnosis"),
TargetEvent = c(EventClass = "VitalStatus",
EventSubclass = "Deceased")) }
ColumnNamesStaging <- ADS$Events %>%
filter(EventSubclass == "Staging") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
colnames()
InitialDiseaseStatus <- ADS$Events %>%
filter(EventClass == "Therapy" | (EventSubclass == "Staging" & EventSubclassRank == 1)) %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(HadTherapy = case_when(EventClass == "Therapy" ~ TRUE,
.default = NA)) %>%
group_by(PatientID, DiagnosisID) %>%
fill(HadTherapy, .direction = "down") %>%
mutate(HadTherapy = replace_na(HadTherapy, FALSE)) %>%
ungroup() %>%
filter(EventSubclass == "Staging") %>%
mutate(IsLikelyInitialStaging = (HadTherapy == FALSE & EventDaysSinceDiagnosis < Settings$CutoffValues$DaysDiagnosisToInitialStaging),
PrimarySiteStatus_Initial = case_when(TNM_T == 0 ~ 0,
.default = 1),
LymphnodalStatus_Initial = case_when(str_starts(TNM_N, "0") ~ 0,
.default = 1),
MetastasisStatus_Initial = case_when(str_starts(TNM_M, "0") ~ 0,
.default = 1)) %>%
select(all_of(ColumnNamesStaging),
IsLikelyInitialStaging,
PrimarySiteStatus_Initial,
LymphnodalStatus_Initial,
MetastasisStatus_Initial)
ColumnNamesDiseaseStatus <- ADS$Events %>%
filter(EventSubclass == "DiseaseStatus") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
colnames()
ADS$DiseaseCourses <- ADS$Events %>%
filter(EventSubclass == "DiseaseStatus") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
bind_rows(InitialDiseaseStatus) %>%
mutate(PrimarySiteStatus_Comp = case_when(EventSubclass == "Staging" ~ PrimarySiteStatus_Initial,
.default = AssignComparatorCodes(PrimarySiteStatus, "PrimarySiteStatus")),
LymphnodalStatus_Comp = case_when(EventSubclass == "Staging" ~ LymphnodalStatus_Initial,
.default = AssignComparatorCodes(LymphnodalStatus, "LymphnodalStatus")),
MetastasisStatus_Comp = case_when(EventSubclass == "Staging" ~ MetastasisStatus_Initial,
.default = AssignComparatorCodes(MetastasisStatus, "MetastasisStatus"))) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%
mutate(PrimarySiteStatus_Diff = PrimarySiteStatus_Comp - lag(PrimarySiteStatus_Comp),
LymphnodalStatus_Diff = LymphnodalStatus_Comp - lag(LymphnodalStatus_Comp),
MetastasisStatus_Diff = MetastasisStatus_Comp - lag(MetastasisStatus_Comp)) %>%
ungroup() %>%
mutate(PrimarySiteChange = case_when(PrimarySiteStatus_Diff == 0 ~ "Stable",
PrimarySiteStatus_Diff < 0 ~ "Regression",
PrimarySiteStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
LymphnodalChange = case_when(LymphnodalStatus_Diff == 0 ~ "Stable",
LymphnodalStatus_Diff < 0 ~ "Regression",
LymphnodalStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
MetastasisChange = case_when(MetastasisStatus_Diff == 0 ~ "Stable",
MetastasisStatus_Diff < 0 ~ "Regression",
MetastasisStatus_Diff > 0 ~ "Progression",
.default = "Unclear"),
IsProgression = case_when(GlobalStatus %in% c("D", "P") ~ TRUE,
PrimarySiteStatus %in% c("rpT", "R") | LymphnodalStatus %in% c("pL", "L") | MetastasisStatus %in% c("pM", "M") ~ TRUE,
PrimarySiteChange == "Progression" | LymphnodalChange == "Progression" | MetastasisChange == "Progression" ~ TRUE,
.default = FALSE),
IsContradiction = GlobalStatus %in% c("CR", "CRr") & IsProgression == TRUE,
IsResponse = case_when(GlobalStatus %in% c("CR", "CRr", "PartRemission", "MinResp") ~ TRUE,
IsProgression == TRUE ~ FALSE,
IsContradiction == TRUE ~ NA,
is.na(GlobalStatus) & (PrimarySiteChange == "Regression" |
LymphnodalChange == "Regression" |
MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableDisease = case_when(GlobalStatus == "NC" ~ TRUE,
(is.na(GlobalStatus) &
(PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable")) ~ TRUE,
.default = FALSE),
IsInRemission = case_when(GlobalStatus %in% c("CR", "CRr", "PartRemission") ~ TRUE,
is.na(GlobalStatus) & (PrimarySiteStatus == "N" & LymphnodalStatus == "N" & MetastasisStatus == "N") ~ TRUE,
.default = FALSE),
IsNewRemission = case_when(IsInRemission == TRUE & (PrimarySiteChange == "Regression" | LymphnodalChange == "Regression" | MetastasisChange == "Regression") ~ TRUE,
.default = FALSE),
IsStableRemission = case_when(IsInRemission == TRUE & (PrimarySiteChange == "Stable" & LymphnodalChange == "Stable" & MetastasisChange == "Stable") ~ TRUE,
.default = FALSE)) %>%
filter(EventSubclass == "DiseaseStatus") %>%
select(all_of(ColumnNamesDiseaseStatus),
PrimarySiteChange,
LymphnodalChange,
MetastasisChange,
IsProgression,
IsContradiction,
IsResponse,
IsStableDisease,
IsInRemission,
IsNewRemission,
IsStableRemission)
ColumnNamesTherapy <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
colnames()
ADS$Therapies <- ADS$Events %>%
filter(EventClass == "Therapy") %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
mutate(IsTherapyOfInterest = if_all(all_of(names(Settings$TherapyOfInterest)), ~ .x == Settings$TherapyOfInterest[[cur_column()]]),
AssociatedTherapyID = EventClassRank,
AssociatedTherapyDate = EventDate) %>%
bind_rows(ADS$DiseaseCourses) %>%
group_by(PatientID, DiagnosisID) %>%
arrange(EventDate, SubclassOrder, .by_group = TRUE) %>%      # Sort again by EventDate and SubclassOrder
fill(AssociatedTherapyID, .direction = "down") %>%
fill(AssociatedTherapyDate, .direction = "down") %>%
mutate(TimeSinceTherapy = round(as.numeric(difftime(EventDate, AssociatedTherapyDate, units = "days")), digits = 1)) %>%
group_by(PatientID, DiagnosisID, AssociatedTherapyID) %>%
mutate(HasResponse = any(IsResponse, na.rm = TRUE),
TimeToResponse = TimeSinceTherapy[which(IsResponse == TRUE)[1]],
TimeToRemission = TimeSinceTherapy[which(IsInRemission == TRUE)[1]],
TimeToRelapse = TimeSinceTherapy[which(IsProgression == TRUE)[1]]) %>%
ungroup() %>%
filter(EventClass == "Therapy") %>%
select(all_of(ColumnNamesTherapy),
IsTherapyOfInterest,
HasResponse,
TimeToResponse,
TimeToRemission,
TimeToRelapse)
View(CDS$Diagnosis)
