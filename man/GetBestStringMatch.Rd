% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GetBestStringMatch.R
\name{GetBestStringMatch}
\alias{GetBestStringMatch}
\title{GetBestStringMatch}
\usage{
GetBestStringMatch(
  String,
  EligibleStrings,
  Method = "jw",
  Tolerance = 0.3,
  StringdistArguments = NULL
)
}
\arguments{
\item{String}{\code{string}}

\item{EligibleStrings}{\code{character vector} - A set of valid/eligible strings}

\item{Method}{\code{string} - Selects the method \code{stringdist()} uses (see \code{stringdist} documentation) - Default: 'jw'}

\item{Tolerance}{\code{double} - Number between 0 and 1 relating to normalized distance between to strings (1 meaning furthest distance, 0 meaning no distance). If 'String' is not similar enough to any of the 'EligibleStrings' and its minimal harmonized distance exceeds this number, return \code{NA}. Default: 0.3}

\item{StringdistArguments}{\code{list} - Additional arguments used in \code{stringdist::stringdist()}}
}
\value{
A \code{named vector} with the input string as name and match as value
}
\description{
Employ fuzzy string matching (using package \code{stringdist}) to try and match a given string to an element in a given set of 'eligible' strings.
}
\author{
Bastian Reiter
}
